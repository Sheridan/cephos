name: Build CephOS installer

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up docker
        uses: docker/setup-buildx-action@v3

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y make

      - name: Building CephOS
        run: make build

      - name: Rename artifact with release tag
        run: |
          TAG=${GITHUB_REF_NAME}
          echo "Using tag: $TAG"
          ls -lh tmp/work/
          mv tmp/work/cephos_installer.run "tmp/work/cephos_installer_${TAG}.run"
          mv tmp/work/cephos.img           "tmp/work/cephos_${TAG}.img"
          ls -lh tmp/work/

      - name: Get fresh Access Token from Yandex
        id: get_token
        run: |
          RESPONSE=$(curl -s -X POST https://oauth.yandex.ru/token \
            -d "grant_type=refresh_token" \
            -d "refresh_token=${{ secrets.YANDEX_REFRESH_TOKEN }}" \
            -d "client_id=${{ secrets.YANDEX_CLIENT_ID }}" \
            -d "client_secret=${{ secrets.YANDEX_CLIENT_SECRET }}")
          echo "Received token type: $(echo $RESPONSE | jq -r '.token_type')"
          ACCESS_TOKEN=$(echo $RESPONSE | jq -r '.access_token')
          echo "ACCESS_TOKEN length: ${#ACCESS_TOKEN}"
          echo "::add-mask::$ACCESS_TOKEN"
          echo "token=$ACCESS_TOKEN" >> "$GITHUB_OUTPUT"

      - name: Upload artifacts to Yandex.Disk
        run: |
          TAG=${GITHUB_REF_NAME}
          for artifact in cephos_installer_${TAG}.run cephos_${TAG}.img
          do
            echo "Uploading ${artifact}..."
            UPLOAD_URL=$(curl -s \
              -H "Authorization: OAuth ${{ steps.get_token.outputs.token }}" \
              "https://cloud-api.yandex.net/v1/disk/resources/upload?path=GitHub/cephos/${artifact}&overwrite=true" \
              | jq -r '.href')
            if [ "$UPLOAD_URL" == "null" ] || [ -z "$UPLOAD_URL" ]
            then
              echo "Failed to get upload URL"
              exit 1
            fi
            curl -T "tmp/work/${artifact}" \
              -o /dev/null \
              --progress-bar \
              "$UPLOAD_URL"
          done
          echo "Uploading artefacts done."
