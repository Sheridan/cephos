#!/usr/bin/env bash

function check_hostname()
{
  if [[ "$0" == "/usr/local/bin/cephos-init-host" ]]
  then
    return 0
  fi
  if [[ "$(hostname -s)" == "${build_hostname}" ]]
  then
    log_cry "Change hostname please"
  fi
}

function set_recursive_permissions()
{
  local target_directory="$1"

  log_verbose "Setting permissions for ${target_directory}"
  sudo chown -R ceph:ceph "${target_directory}"
  sudo find "${target_directory}" -type d -exec chmod 750 {} \;
  sudo find "${target_directory}" -type f -exec chmod 640 {} \;
}

function set_fs_permissions()
{
  log_verbose "Setting permissions"
  set_recursive_permissions "${ceph_conf_dir}"
  set_recursive_permissions "${ceph_data_dir}"
}

function create_directories()
{
  log_verbose "Creating directories"
  sudo mkdir -p ${ceph_data_dir}/bootstrap-mon \
                ${ceph_data_dir}/bootstrap-mds \
                ${ceph_data_dir}/bootstrap-mgr \
                ${ceph_data_dir}/bootstrap-osd \
                ${ceph_data_dir}/bootstrap-rgw
  set_fs_permissions
}



function activate_lvm_prescan()
{
  log_verbose "Enabling ceph-lvm-activate.service"
  sudo systemctl enable ceph-lvm-activate.service
}

function prepare_ceph_data()
{
  log_verbose "Preparing data"
  check_hostname

  cephos_data_dir="/var/lib/cephos"
  ceph_conf_dir="/etc/ceph"
  ceph_data_dir="/var/lib/ceph"
  ceph_main_conf="${ceph_conf_dir}/ceph.conf"

  ceph_fsid=$(get_cluster_environment "fsid" "none")

  cephfs_name="storage"
  mon_id="$(hostname -s)"
  mgr_id="$(hostname -s)"
  mds_id="$(hostname -s)"
  mon_data_dir="${ceph_data_dir}/mon/ceph-${mon_id}"
  mgr_data_dir="${ceph_data_dir}/mgr/ceph-${mgr_id}"
  mds_data_dir="${ceph_data_dir}/mds/ceph-${mds_id}"
  osd_data_dir="${ceph_data_dir}/osd"

  public_network=$(get_cluster_environment "public_network" "10.0.0.0/8")
  cluster_network=$(get_cluster_environment "cluster_network" "10.0.0.0/8")
  public_ip=$(get_node_environment "public_ip" "10.0.0.100")
  cluster_ip=$(get_node_environment "cluster_ip" "10.0.0.101")

  export CLUSTER=ceph
  export CEPH_CLUSTER=ceph
  export CEPH_CONF="${ceph_main_conf}"

  sudo_ceph="sudo --preserve-env"

  log_info "Ceph fsid: ${ceph_fsid}"
  log_info "Ceph id: [mon:${mon_id}], [mgr:${mgr_id}], [mds:${mds_id}]"
}

prepare_ceph_data
