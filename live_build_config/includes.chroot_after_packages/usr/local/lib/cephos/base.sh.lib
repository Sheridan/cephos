#!/usr/bin/env bash

clr_reset="\e[0m"
clr_info="\e[1;32m"
clr_warn="\e[1;33m"
clr_err="\e[1;31m"
clr_verb="\e[1;36m"
verbose=0
build_hostname="cephos"

function log_message()
{
  local log_level="$1"
  local log_color="$2"
  local log_text="$3"
  echo -e "[${log_color}${log_level}${clr_reset}] ${log_text}"
}

function log_verbose()
{
  local message="$1"
  if (( verbose ))
  then
    log_message "V" "${clr_verb}" "${message}"
  fi
}

function log_info()
{
  local message="$1"
  log_message "I" "${clr_info}" "${message}"
}

function log_wrn()
{
  local message="$1"
  log_message "W" "${clr_warn}" "${message}"
}

function log_err()
{
  local message="$1"
  log_message "E" "${clr_err}" "${message}"
}

function log_delimiter()
{
  log_message "=" "${clr_verb}"  "--------==|==--------"
}

function wrong_opt()
{
  local message="$1"
  log_err "${message}"
  usage
  exit 1
}

function log_cry()
{
  local message="$1"
  log_err "${message}"
  exit 1
}

function verbose_flag()
{
  if (( verbose ))
  then
    echo "-v"
  else
    echo " "
  fi
}

function usage()
{
  echo "${help_text}"
  echo "$@"
  echo
  echo -n "CephOS version: "
  cat /etc/cephos_version
  exit 0
}

function ask_confirmation()
{
  local prompt_message=$1
  local user_input

  while true
  do
    echo -ne "[${clr_warn}?${clr_reset}] "
    read -r -p "${prompt_message} (y/n): " user_input
    case "${user_input}" in
      [Yy]) return 0 ;;
      [Nn]) exit 1   ;;
         *) log_wrn "Please enter 'y' or 'n'. Try again." ;;
    esac
  done
}

function check_user()
{
  local target_user="$1"
  if [[ "$(id -un)" != "${target_user}" ]]
  then
    log_err "Must be run as user ${target_user}"
    exit 1
  fi
}

function manage_service_state()
{
  local state="$1"
  local service="$2"
  log_verbose "Change service '${service}' satate to '${state}'"
  sudo systemctl ${state} --now ${service}.service
}

function ensure_symlink_correct()
{
  local target_dir="$1"
  local symlink_path="$2"
  local current_target=""

  if [[ ! -d "${target_dir}" ]]
  then
    log_cry "Directory '${target_dir}' does not exist"
  fi

  if [[ -L "${symlink_path}" ]]
  then
    local resolved_target

    current_target="$(readlink -f "${symlink_path}")"
    resolved_target="$(readlink -f "${target_dir}")"

    if [[ "${current_target}" == "${resolved_target}" ]]
    then
      log_verbose "Symlink '${symlink_path}' -> '${current_target}' exists"
      return 0
    else
      log_wrn "Symlink '${symlink_path}' is targeting '${current_target}', recreating..."
      sudo rm -f "${symlink_path}" || { log_cry "Cannot delete current symlink '${symlink_path}'"; }
    fi
  elif [[ -e "${symlink_path}" ]]
  then
    log_wrn "'${symlink_path}' exists, but is not a symlink. Remake..."
    sudo rm -rf "${symlink_path}" || { log_cry "Cannot delete '${symlink_path}'"; }
  else
    log_verbose "'${symlink_path}' does not exist, let's create it"
  fi

  sudo ln -s "${target_dir}" "${symlink_path}" || { log_cry "Cannot create symlink '${symlink_path}'."; }
}

function is_float()
{
  local value="$1"
  [[ "$value" =~ ^-?[0-9]+([.][0-9]+)?$ ]]
}
