#!/usr/bin/env bash

. /usr/local/lib/cephos/base.sh.lib
. /usr/local/lib/cephos/config.sh.lib
. /usr/local/lib/cephos/cephos.sh.lib

read -r -d '' help_text <<EOF
Usage: $0 [-hv]
Initialize a Ceph Metadata Service (MDS) node.

Options:
  -h  Show this help message and exit
  -v  Enable verbose mode
EOF
set -euo pipefail
# --- options parse ---
while getopts ":hv" opt
do
  case ${opt} in
    h) usage     ;;
    v) verbose=1 ;;
   \?) wrong_opt "Unknown option -${OPTARG}"              ;;
    :) wrong_opt "Option -${OPTARG} requires an argument" ;;
  esac
done
# --- options parse ---
# --- main ---
check_user "cephos"

log_info "Initializing MDS ${mds_id} with [fsid:${ceph_fsid}] and main configuration file ${ceph_main_conf}"

if ! sudo test -d "${mds_data_dir}"
then
  log_info "MDS not found on this host, creating new MDS with ID ${mds_id}"

  log_info "Creating directories ${mds_data_dir}"
  sudo mkdir -p "${mds_data_dir}"

  log_info "Creating keys"
  ${sudo_ceph} ceph auth get-or-create mds.${mds_id} mon 'allow profile mds' mgr 'allow profile mds' osd 'allow rwx' mds 'allow *' -o ${mds_data_dir}/keyring
  # ${sudo_ceph} ceph auth get-or-create client.mds.${mds_id} mon 'allow rw' osd 'allow rwx' mds 'allow *' -o ${ceph_conf_dir}/client.mds.${mds_id}.keyring

  set_fs_permissions

  manage_systemd_service_state "enable" "ceph-mds@${mds_id}"

else
  log_verbose "MDS '${mds_id}' already exists on this host"
fi

beep_done
