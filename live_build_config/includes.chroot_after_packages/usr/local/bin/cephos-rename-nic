#!/usr/bin/env bash

. /usr/local/lib/cephos/base.sh.lib

read -r -d '' help_text <<EOF
Usage: $0 -o OLD_NAME -n NEW_NAME
Example: $0 -o eth0 -n public_0
EOF

set -euo pipefail

RULES_FILE="/etc/udev/rules.d/70-persistent-net.rules"

function get_mac_address()
{
  local interface_name="$1"
  ip link show "$interface_name" | awk '/link\/ether/ {print $2}'
}

function check_interface_exists()
{
  local interface_name="$1"
  if ! ip link show "$interface_name" &>/dev/null
  then
    log_cry "Ошибка: интерфейс '${interface_name}' не найден."
  fi
}

function check_interface_not_exists_in_rules()
{
  local new_name="$1"
  if [[ -f "$RULES_FILE" ]] && grep -q "NAME=\"$new_name\"" "$RULES_FILE"
  then
    log_cry "Ошибка: правило для интерфейса '${new_name}' уже существует в ${RULES_FILE}."
  fi
}

function add_udev_rule()
{
  local old_name="$1"
  local new_name="$2"
  local mac_address="$3"

  log_info "Добавление правила для интерфейса '${old_name}' (${mac_address}) → '${new_name}' в ${RULES_FILE} ..."

  sudo mkdir -p "$(dirname "$RULES_FILE")"

  if [[ -f "$RULES_FILE" ]]
  then
    sudo sed -i "/${mac_address}/d" "$RULES_FILE"
  fi

  echo "SUBSYSTEM==\"net\", ACTION==\"add\", ATTR{address}==\"${mac_address}\", NAME=\"${new_name}\"" | sudo tee -a "$RULES_FILE" >/dev/null

  log_info "Правило добавлено."
}

add_init()
{
  local new_name="$1"
  cat <<EOF | sudo tee "/etc/network/interfaces.d/${new_name}.cfg" > /dev/null
allow-hotplug ${new_name}
iface ${new_name} inet dhcp
EOF
  log_info "Добавлен конфиг /etc/network/interfaces.d/${new_name}.cfg"
}

# --- main ---

old_iface=""
new_iface=""
while getopts ":o:n:h" opt
do
  case "$opt" in
    o) old_iface="$OPTARG" ;;
    n) new_iface="$OPTARG" ;;
    h) help; exit 0 ;;
   \?) wrong_opt "Ошибка: неизвестная опция -${OPTARG}" ;;
    :) wrong_opt "Ошибка: опция -${OPTARG} требует аргумент" ;;
  esac
done

if [[ -z "$old_iface" || -z "$new_iface" ]]
then
    wrong_opt "Ошибка: необходимо указать параметры -o и -n."
fi

check_interface_exists "$old_iface"
check_interface_not_exists_in_rules "$new_iface"

mac_addr=$(get_mac_address "$old_iface")

if [[ -z "$mac_addr" ]]
then
  log_cry "Ошибка: не удалось определить MAC-адрес для '${old_iface}'."
fi

add_udev_rule "$old_iface" "$new_iface" "$mac_addr"
add_init "$new_iface"

log_info "Сетевой интерфейс '${old_iface}' будет доступен как '${new_iface}' после перезагрузки."
ask_confirmation "Необходима перезагрузка. Перезагрузить хост?"
log_wrn "Перезагрузка системы..."
sudo reboot
