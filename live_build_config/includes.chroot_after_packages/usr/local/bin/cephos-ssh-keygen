#!/usr/bin/env bash

. /usr/local/lib/cephos/base.sh.lib

read -r -d '' help_text <<EOF
Usage: $0
Example: $0
EOF

set -euo pipefail

# --- options parse ---
while getopts ":hv" opt
do
  case ${opt} in
    h) help; exit 0 ;;
    v) verbose=1 ;;
   \?) wrong_opt "Ошибка: неизвестная опция -${OPTARG}" ;;
    :) wrong_opt "Ошибка: опция -${OPTARG} требует аргумент" ;;
  esac
done
# --- options parse ---

function generate_ssh_key()
{
  local target_home="$1"
  local target_user="$2"
  local ssh_dir="${target_home}/.ssh"
  local key_file="${ssh_dir}/id_ed25519"

  log_info "Генерация ключа для пользователя '${target_user}'..."
  log_info "Путь к ключу: ${key_file}"

  if [[ ! -d "${ssh_dir}" ]]
  then
    log_info "Создаю директорию ${ssh_dir}"
    mkdir -p -m 700 "${ssh_dir}"
    chown "${target_user}":"${target_user}" "${ssh_dir}"
  fi

  if [[ -f "${key_file}" ]]
  then
    log_err "Ключ ${key_file} уже существует. Удалите его, если хотите пересоздать."
    exit 0
  fi

  ssh-keygen -t ed25519 -f "${key_file}" -N "" -C "${target_user}@$(hostname)"

  chown "${target_user}":"${target_user}" "${key_file}" "${key_file}.pub"
  chmod 600 "${key_file}"
  chmod 644 "${key_file}.pub"

  log_info "Ключ успешно сгенерирован для ${target_user}"
}

function get_user_home()
{
  local username="$1"
  local user_home

  user_home=$(getent passwd "${username}" | cut -d: -f6)

  if [[ -z "${user_home}" ]]
  then
    log_cry "Не удалось определить домашний каталог для ${username}"
  fi

  echo "${user_home}"
}

current_user=$(id -un)
user_home=$(get_user_home "${current_user}")
generate_ssh_key "${user_home}" "${current_user}"
