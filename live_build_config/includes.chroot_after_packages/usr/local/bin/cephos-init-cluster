#!/usr/bin/env bash

. /usr/local/lib/cephos/base.sh.lib
. /usr/local/lib/cephos/config.sh.lib
. /usr/local/lib/cephos/cephos.sh.lib

read -r -d '' help_text <<EOF
CephOS Cluster Initialization Script

Options:
-h  Display this help message
-v  Enable verbose output
EOF
set -euo pipefail

# --- options parse ---
while getopts ":hv" opt
do
  case ${opt} in
    h) usage; exit 0 ;;
    v) verbose=1 ;;
   \?) wrong_opt "Error: unknown option -${OPTARG}" ;;
    :) wrong_opt "Error: option -${OPTARG} requires an argument" ;;
  esac
done
# --- options parse ---
# --- main ---
check_user "cephos"

ceph_fsid=$(uuidgen)
set_cluster_environment "FSID" "${ceph_fsid}"

log_info "Init cluster with [fsid:${ceph_fsid}] and main conf file ${ceph_main_conf}"
create_directories

log_verbose "Creating keys"
sudo ceph-authtool --create-keyring ${ceph_conf_dir}/ceph.client.admin.keyring --gen-key -n client.admin --cap mon 'allow *' --cap osd 'allow *' --cap mgr 'allow *' --cap mds 'allow *'
sudo ceph-authtool --create-keyring ${ceph_data_dir}/bootstrap-osd/ceph.keyring --gen-key -n client.bootstrap-osd --cap mon 'profile bootstrap-osd' --cap mgr 'allow r'

log_verbose "Creating configuration ${ceph_main_conf}"
cat <<EOF | sudo tee ${ceph_main_conf}
[global]
fsid = ${ceph_fsid}
mon_initial_members = $(hostname -s)
mon_host = ${public_ip}

public_network = ${public_network}
cluster_network = ${cluster_network}

auth_cluster_required = cephx
auth_service_required = cephx
auth_client_required = cephx

osd_pool_default_size = 3
osd_pool_default_min_size = 2
osd_crush_chooseleaf_type = 1

osd_pool_default_pg_autoscale_mode = on

osd_max_backfills = 1
osd_recovery_max_active = 1
osd_recovery_op_priority = 3
osd_scrub_sleep = 0.1
osd_deep_scrub_randomize_ratio = 0.5
EOF

set_fs_permissions
ceph_crash_up

log_info "Basic initialization completed"
