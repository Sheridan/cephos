#!/usr/bin/env bash

. /usr/local/lib/cephos/base.sh.lib
. /usr/local/lib/cephos/config.sh.lib
. /usr/local/lib/cephos/ceph.sh.lib
. /usr/local/lib/cephos/cephos.sh.lib
. /usr/local/lib/cephos/blockdev.sh.lib

read -r -d '' help_text <<EOF
Usage: $0 -d <block_device>
This script removes a block device (OSD) from a Ceph cluster.

Options:
  -d <block_device> Specify the block device to remove (e.g., /dev/sdb)
  -f                Force remove, no wait HEALTH_OK
  -h                Show this help message
  -v                Enable verbose output

Examples:
  # Remove /dev/sdb from the cluster
  $0 -d /dev/sdb
EOF
set -euo pipefail
# --- functions ---
function get_osd_id()
{
  local block_device="$1"
  ${sudo_ceph} ceph-volume lvm list "${block_device}" --format json | jq -r '.[keys[0]][0].tags["ceph.osd_id"]' 2>/dev/null || true
}

# --- functions ---
# --- options parse ---
block_device=""
force=0
while getopts ":d:fhv" opt
do
  case ${opt} in
    d) block_device="${OPTARG}" ;;
    f) force=1   ;;
    h) usage     ;;
    v) verbose=1 ;;
   \?) wrong_opt "Unknown option -${OPTARG}"              ;;
    :) wrong_opt "Option -${OPTARG} requires an argument" ;;
  esac
done

if [[ -z "$block_device" ]]; then
  wrong_opt "Options not specified"
fi

if [[ ! -b "$block_device" ]]; then
  log_cry "Block device ${block_device} does not exist or is not a valid block device"
fi
# --- options parse ---
# --- main ---
check_user "${build_user}"

if ! disk_already_in_ceph "${block_device}"
then
  log_cry "Block device ${block_device} is not in Ceph"
fi

if ( ! cluster_status_ok ) && (( ! force ))
then
  wrong_opt "Cluster state is not 'HEALTH_OK'. Either wait for 'HEALTH_OK', or use the '-f' key."
fi

print_device_info "${block_device}"
osd_id=$(get_osd_id "${block_device}")
if [[ -z "$osd_id" || "$osd_id" == "null" ]]
then
  log_cry "Unable to determine OSD ID for device ${block_device}."
fi
log_info "Detected OSD ID: ${osd_id}"
log_wrn "Do not delete several disks in parallel! Try not to delete disks while the cluster is actively working."
ask_confirmation "This operation will remove disk ${block_device} from the cluster and destroy all data on the disk. Continue?"

log_info "Removing disk ${block_device} from MON ${mon_id}"
log_info "Marking OSD.${osd_id} as out..."
${sudo_ceph} ceph osd out ${osd_id} || log_wrn "OSD already out or non-active"

if (( ! force ))
then
  wait_for_cluster_health_ok
fi

log_info "Stopping OSD ${osd_id} service..."
sudo systemctl stop ceph-osd@${osd_id}.service || log_wrn "Unable to stop ceph-osd@${osd_id}"

log_info "Removing OSD ${osd_id} from cluster..."
${sudo_ceph} ceph osd crush remove osd.${osd_id} || log_wrn "crush remove failed (may already be removed)"
${sudo_ceph} ceph auth del osd.${osd_id} || log_wrn "auth already deleted"
${sudo_ceph} ceph osd rm ${osd_id} || log_wrn "osd rm failed (may already be removed)"
${sudo_ceph} ceph osd purge ${osd_id} --yes-i-really-mean-it

if (( ! force ))
then
  log_info "Zapping device ${block_device}..."
  ${sudo_ceph} ceph-volume lvm zap --destroy "${block_device}"
  log_info "Disk ${block_device} is cleaned."

  purge_device "${block_device}"
  log_info "Disk ${block_device} is purged"
fi

set_fs_permissions

log_info "OSD ${osd_id} and disk ${block_device} is removed from ceph."

beep_done
