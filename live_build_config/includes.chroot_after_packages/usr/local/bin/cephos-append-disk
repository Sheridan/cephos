#!/usr/bin/env bash

. /usr/local/lib/cephos/base.sh.lib
. /usr/local/lib/cephos/config.sh.lib
. /usr/local/lib/cephos/cephos.sh.lib
. /usr/local/lib/cephos/blockdev.sh.lib

read -r -d '' help_text <<EOF
Usage: $0 -d <block_device>
This script appends a block device to a Ceph cluster by creating a new OSD (Object Storage Daemon).

Options:
  -d <block_device> Specify the block device to append (e.g., /dev/sdb)
  -h                Show this help message
  -v                Enable verbose output

Examples:
  # Append /dev/sdb to the cluster
  $0 -d /dev/sdb

  # Append /dev/sdc with verbose output
  $0 -d /dev/sdc -v
EOF
set -euo pipefail

# --- options parse ---
block_device=""
while getopts ":d:hv" opt
do
  case ${opt} in
    d) block_device="${OPTARG}" ;;
    h) echo "${help_text}"; exit 0 ;;
    v) verbose=1 ;;
   \?) wrong_opt "Error: unknown option -${OPTARG}" ;;
    :) wrong_opt "Error: option -${OPTARG} requires an argument" ;;
  esac
done

if [[ -z "$block_device" ]]
then
  wrong_opt "Options not specified"
fi

if [ ! -b "$block_device" ]
then
  log_cry "Block device ${block_device} not exists or not a valid block device"
fi
# --- options parse ---
# --- main ---
check_user "cephos"
ask_confirmation "This operation will destroy all data on disk ${block_device}. Continue?"

log_info "Appending disk ${block_device} to mon ${mon_id}"

purge_device "${block_device}"

log_info "Creating volume on device ${block_device}"
if [[ ! -f "${ceph_conf_dir}/ceph.client.bootstrap-osd.keyring" ]]
then
  sudo ln -s ${ceph_data_dir}/bootstrap-osd/ceph.keyring ${ceph_conf_dir}/ceph.client.bootstrap-osd.keyring
fi
${sudo_ceph} ceph-volume \
    lvm create \
  --data "${block_device}" \
  --objectstore bluestore
set_fs_permissions

log_info "OSD successfully created on ${block_device}"
