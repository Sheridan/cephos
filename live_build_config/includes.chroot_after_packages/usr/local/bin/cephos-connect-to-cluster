#!/usr/bin/env bash

. /usr/local/lib/cephos/base.sh.lib
. /usr/local/lib/cephos/config.sh.lib
. /usr/local/lib/cephos/cephos.sh.lib
. /usr/local/lib/cephos/network.sh.lib
. /usr/local/lib/cephos/ssh.sh.lib

read -r -d '' help_text <<EOF
CephOS Cluster Connection Script

Options:
-n <cluster_node_ip> Specify any working cluster node IP address
-h                   Display this help message
-v                   Enable verbose output

Examples:
# Connect to cluster
$0 -n 10.10.0.100
EOF
set -euo pipefail

# --- options parse ---
current_user="cephos"
cluster_node=""
while getopts ":n:hv" opt
do
  case ${opt} in
    n) cluster_node="${OPTARG}" ;;
    h) usage; exit 0 ;;
    v) verbose=1 ;;
   \?) wrong_opt "Error: unknown option -${OPTARG}" ;;
    :) wrong_opt "Error: option -${OPTARG} requires an argument" ;;
  esac
done

if [[ -z "${cluster_node}" ]]
then
  wrong_opt "No cluster node specified"
fi
# --- options parse ---
# --- main ---
check_user "cephos"

user_home=$(get_user_home "${current_user}")
generate_ssh_key "${user_home}" "${current_user}"
spread_ssh_key "${user_home}" "${current_user}" "${cluster_node}"

create_directories
copy_file_from_host "${cluster_node}" "${cephos_conf}/cluster.ini"
copy_file_from_host "${cluster_node}" "${ceph_conf_dir}/ceph.conf"
copy_file_from_host "${cluster_node}" "${ceph_conf_dir}/ceph.client.admin.keyring"
copy_file_from_host "${cluster_node}" "${ceph_data_dir}/bootstrap-osd/ceph.keyring"
set_fs_permissions
prepare_ceph_data

copy_directory_from_host "${cluster_node}" "/etc/chrony/sources.d"
manage_service_state "enable" "chrony"
sudo timedatectl set-ntp yes

log_delimiter
cephos-init-mon $(verbose_flag) -n "${cluster_node}"
sleep 4
ceph_crash_up
log_delimiter
cephos-conf-sync $(verbose_flag)
log_delimiter
cephos-init-mgr $(verbose_flag)
